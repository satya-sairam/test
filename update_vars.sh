#!/bin/bash

# Define the path to the vars.yaml file
VARS_FILE="vars.yaml"

# Create or overwrite the vars.yaml file
cat <<EOF > $VARS_FILE
global:
  # PCAI single node
  EZFAB: "${EZFAB_URL}"
  EZFABRICTL: "${EZFABRICCTL_URL}"
  REGISTRY_URL: "${REGISTRY_URL}"

proxy:
    HTTP_PROXY: "${HTTP_PROXY}"
    HTTPS_PROXY: "${HTTPS_PROXY}"
    NO_PROXY: "${NO_PROXY}"

cluster:
  COORDINATOR_NLB: "${COORDINATOR_NLB}"
  COORDINATOR_IPS: "${COORDINATOR_IPS}"
  FIRST_COORDINATOR_IP: "${FIRST_COORDINATOR_IP}"
  MASTER_IPS: "${MASTER_IPS}"
  FIRST_MASTER_IP: "${FIRST_MASTER_IP}"
  MASTER_EXTERNAL_NLB: "${MASTER_EXTERNAL_NLB}"
  MASTER_FLOATING_VIP: "${MASTER_FLOATING_VIP}"
  METALLB_CIDR: "${METALLB_CIDR}"
  WORKER_IPS: "${WORKER_IPS}"
  GPU_IPS: "${GPU_IPS}"
  CLUSTER_NAME: "${CLUSTER_NAME}"
  UA_DOMAIN_NAME: "${UA_DOMAIN_NAME}"
  VCPUS: "${VCPUS}"
  VGPUS: "${VGPUS}"
  GPU_PARTITION: "${GPU_PARTITION}"
  WORKLOAD_TYPE: "${WORKLOAD_TYPE}"
  DEPLOY_ENV: "${DEPLOY_ENV}"
  K8S_VERSION: "${K8S_VERSION}"
  SSH_USER: "${SSH_USER}"

storage:
  PROVIDER: "${STORAGE_PROVIDER}"
  # PROVIDER : "GL4F"

  # NFS Config
  NFS_ENDPOINT: "${NFS_ENDPOINT}"
  NFS_SHARE: "${NFS_SHARE}"
  NFS_MOUNT_OP: "${NFS_MOUNT_OP}"

  #GL4F Config
  GL4F_ENDPOINT: "${GL4F_ENDPOINT}"
  GL4F_ROOT_EXPORT: "${GL4F_ROOT_EXPORT}"
  GL4F_SECRET_NAME: "${GL4F_SECRET_NAME}"
  GL4F_VIEW_POLICY: "${GL4F_VIEW_POLICY}"
  GL4F_VIP_POOL_NAME: "${GL4F_VIP_POOL_NAME}"
  GL4F_USER: "${GL4F_USER}"
  GL4F_PASSWORD: "${GL4F_PASSWORD}"
  GL4F_MOUNT_OP: "${GL4F_MOUNT_OP}"

  #EDF Config
  EDF_CLDB_HOSTS: "${EDF_CLDB_HOSTS}"
  EDF_MOUNT_PREFIX: "${EDF_MOUNT_PREFIX}"
  EDF_REST_SERVERS: "${EDF_REST_SERVERS}"
  EDF_SECRET_NAME: "${EDF_SECRET_NAME}"

  #Alletra Config
  ALLETRA_ENDPOINT: "${ALLETRA_ENDPOINT}"
  ALLETRA_NAME: "${ALLETRA_NAME}"
  ALLETRA_PORT: "${ALLETRA_PORT}"
  ALLETRA_SECRET_NAME: "${ALLETRA_SECRET_NAME}"

objectstore:
  # TODO: Support for root ca file
  PROVIDER: "${OBJECTSTORE_PROVIDER}"

  # MinIO Config
  MINIO_ENDPOINT: "${MINIO_ENDPOINT}"
  MINIO_ACCESS_KEY: "${MINIO_ACCESS_KEY}"
  MINIO_SECRET_KEY: "${MINIO_SECRET_KEY}"
    
  # GL4F Config
  GL4F_ENDPOINT: "${GL4F_ENDPOINT}"
  GL4F_ACCESS_KEY: "${GL4F_ACCESS_KEY}"
  GL4F_SECRET_KEY: "${GL4F_SECRET_KEY}"

  # AWS Config
  AWS_ENDPOINT: "${AWS_ENDPOINT}"
  AWS_ACCESS_KEY: "${AWS_ACCESS_KEY}"
  AWS_SECRET_KEY: "${AWS_SECRET_KEY}"
  AWS_REGION: "${AWS_REGION}"

  # EDF Config
  EDF_ENDPOINT: "${EDF_ENDPOINT}"
  EDF_ACCESS_KEY: "${EDF_ACCESS_KEY}"
  EDF_SECRET_KEY: "${EDF_SECRET_KEY}"

license:
  TYPE: "${LICENSE_TYPE}" # or subscription
  VCPU_LICENSE_FILE: "${VCPU_LICENSE_FILE}"
  GPU_LICENSE_FILE: "${GPU_LICENSE_FILE}" # Required if it is capacity license type

dnscerts:
  USE_CUSTOM_DOMAIN_CERTS: "${USE_CUSTOM_DOMAIN_CERTS}"  # If set to custom, must specify values for below 3 fields
  SERVER_CERT_FILE: "${SERVER_CERT_FILE}" # file path to server.pem or fullchain.pem file
  PRIVATE_KEY_FILE: "${PRIVATE_KEY_FILE}"
  ROOT_CA_FILE: "${ROOT_CA_FILE}"
EOF

echo "vars.yaml has been updated."
cat vars.yaml


